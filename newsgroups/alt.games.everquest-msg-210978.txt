From -2913430083214260883
X-Google-Language: ENGLISH,ASCII-7-bit
X-Google-Thread: fb739,7963a6874f881fae,start
X-Google-Attributes: gidfb739,public
X-Google-ArrivalTime: 2003-08-08 01:58:40 PST
Path: archiver1.google.com!news1.google.com!newsfeed.stanford.edu!cyclone.bc.net!snoopy.risq.qc.ca!chi1.webusenet.com!c03.atl99!news.webusenet.com!pc01.webusenet.com!fe02.atl2.webusenet.com.POSTED!not-for-mail
From: Stephan Rose <kermos@no.bestnetpc.spam.com>
Newsgroups: alt.games.everquest
Subject: Render Target Problem
Message-ID: <n1p6jv0s42kc4gtp10propqdp064gl3ba2@4ax.com>
X-Newsreader: Forte Agent 1.93/32.576 English (American)
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Lines: 41
X-Complaints-To: abuse@usenetserver.com
X-Abuse-Info: Please be sure to forward a copy of ALL headers
X-Abuse-Info: Otherwise we will be unable to process your complaint properly.
NNTP-Posting-Date: Fri, 08 Aug 2003 04:45:18 EDT
Date: Fri, 08 Aug 2003 04:56:07 -0400
Xref: archiver1.google.com alt.games.everquest:296135

Well after a lot of cursing, crashes, whatnot. Got the render target
situation I had asked about earlier resolved, and even got things
running on the other machine. Didn't realize my depth buffer had to be
larger than the render target (even if I'm not even using one for the
new render target, using transformed coords).

Everything is working flawlessly here on my system too.

On the other system however, my artists system, things aren't quite as
fortunate. While things no longer crash...the sky texture retains
garbage data...stuff that shouldn't be on it. 

Here's what I do..

Backup z-buffer
Backup render target

Set new z-buffer previously created for new target
Set new target (my texture)

Clear it...(which normally I shouldn't need to do as the quads take up
the entire area).

Render my quads to it..transformed verts.

Switch back to my old zbuffer
switch back to my old rendering target

Done.

Works great over here...
Does not work great on the other system.

I check all calls against failure.
Check all pointers created against NULL.

Everything passes, no failures.

Anyone have any idea why it may be working here...but not there?

Stephan



