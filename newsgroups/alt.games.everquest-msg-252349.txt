From -1311111503553599395
X-Google-Language: ENGLISH,ASCII-7-bit
X-Google-Thread: 104a20,172a1dcd46cd24ff
X-Google-Thread: 108f8e,172a1dcd46cd24ff
X-Google-Thread: 100ff8,172a1dcd46cd24ff
X-Google-Thread: fb739,172a1dcd46cd24ff
X-Google-Thread: 1efecb,172a1dcd46cd24ff
X-Google-Attributes: gid104a20,gid108f8e,gid100ff8,gidfb739,gid1efecb,public
Path: g2news1.google.com!news1.google.com!news.glorb.com!green.octanews.net!news-out.octanews.net!priapus.visi.com!orange.octanews.net!news.octanews.net!phobos.visi.com!news-out.visi.com!news-4.mpls.visi.com.POSTED!not-for-mail
From: Steve Bartman <sbartman@visi.com>
Newsgroups: comp.sys.ibm.pc.games.strategic,comp.sys.ibm.pc.games.action,comp.sys.ibm.pc.games.rpg,alt.games.everquest,alt.games.coh
Subject: Re: Vivendi shuts down Sierra, Papyrus, Impressions.
Date: Thu, 24 Jun 2004 02:34:19 -0500
Message-ID: <0dvkd0d0bp59jqokk4tqm08uqlnippaais@4ax.com>
References: <10dhm8c6k37e7fb@news.supernews.com> <jp3id0drfpsk6vs0sgiubeaq0jas583c43@4ax.com> <1cbCc.227$%u2.224@bignews4.bellsouth.net> <3isjd05c6te1ltdcealk2cbfjfi9j9h5ae@4ax.com> <dtujd05lou4f1uvqn2t503a1ppd94h3do6@4ax.com> <nhakd05v26mn0qgoo60780nv41r8dhv8pg@4ax.com>
X-Newsreader: Forte Agent 1.92/32.572
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Lines: 186
Organization: VISI.com
NNTP-Posting-Date: 24 Jun 2004 02:34:13 CDT
NNTP-Posting-Host: 0ea83ce8.newsreader.visi.com
X-Trace: DXC=`YPEPdDV;3C^O=8[8PP:QA]6E;X_9dHeNhD3OXm`l_bHSoHMe43nf2I9ZA\LAP0P\DUH9DC8X^^ZO68<=^UgTS[F
X-Complaints-To: abuse@visi.com
Xref: g2news1.google.com comp.sys.ibm.pc.games.strategic:2917 comp.sys.ibm.pc.games.action:7708 comp.sys.ibm.pc.games.rpg:7704 alt.games.everquest:7671 alt.games.coh:1140

On Thu, 24 Jun 2004 01:39:23 GMT, Thrasher <spectre911@hotmail.com>
wrote:

>On Wed, 23 Jun 2004 17:12:24 -0500, Steve Bartman <sbartman@visi.com>
>wrote:
>
>>I have a close friend working on an enterprise team to deliver a
>>project in five sites across the continent, in 12-months, on five
>>different legacy systems, with three different managements and four
>>primary vendor relationships. 
>
>I have no idea what this means.

I'm sorry. I thought it was fairly clearly written.

 I do commercial software development.
>I don't deliver code. I don't install code. I don't train users. I
>don't write manuals. I don't do quality assurance. I write code.

My friend is a consultant, but the client is writhing all the module
code. Insisting on it in fact. My point is, six programmers wouldn't
have made a dent in the project. And the coders are not only coders.
They're half-pregnant as business analysts as well. Have to be to live
within the legacy boundaries.

I also hope you're very, very good at what you do because pure coding
is becoming a commodity. If you can't add other value it'll go
offshore. Large data-intensive firms are learning fast what can be
offshored and what can't be, and how much pre-work has to be done for
what can be. It's not a nirvana solution, but it's here to stay.

>>five sites across the continent
>
>Irrelevant. My job is identical whether the company I work for sells
>my application to 1 customer or 1000 customers. 
>
>>five different legacy systems
>
>Five different operating systems is five different projects, not one
>project.

Not O/Ses specifically, mostly DBMS and call center software.
 
>>with three different managements and four
>>primary vendor relationships. 
>
>This is a corporate political problem not a development problem.

It's a massive development problem as it happens. IF you want to keep
your head down and pound code fine, but don't be surprised when you
get run over. Solving the problem is the goal, not producing X lines
of code.

>>Over 500 core modules to design, code, and test before integration
>> and load-testing
>
>I have no idea what a "core module" is... what programming language
>are you talking about?

XML and COM objects, with an outer envelope of proprietary stuff to
get through a multi-step queuing process on both ends of a
trans-continental backbone. I'm not a developer, so a lot of it goes
over my head. My impression was it's not rocket-science coding, just
massive amounts of it.

> Do you mean 500 different programs? 

Essentially yes, but called sequentially by CSRs and sharing client
RAM. The testing scripts are pretty hairy.

 That would
>be 500 different projects, with 500 different development teams, not
>one. Or do you mean 500 functions within a single program? I could do
>that myself in a year's time, easily.

Uh, no, you couldn't. Just defining the data schema and determining
lay-out trade-offs was over 5000 man-hours. Programming was a couple
of milestones past that.

I'm not denigrating what you do. I'm just saying that there may be a
bigger world outside your cube you're not seeing.

>>with parallel user training and certification. Six programmers wouldn't even have been
>>able to read the business analysis and do 100 of the modules in that
>>time.
>
>We're obviously talking about apples and oranges here. No software
>developer at a company I've worked for has ever been asked to read a
>"business analysis" :D

Then you work on very simple projects. I'm talking UML primarily. You
don't use it or something similar?

>>The scale of software projects has changed. Perhaps your environment
>>has shielded you from some of that.
>
>Hmmm.... for the last 8 years I have done the Windows client side
>applications for industrial grade client/server applications. Some of
>the biggest companies in the world use apps that I've written. Dunno
>what's larger scale than that. 

We're using "scale" differently.

>I think maybe the problem is your friend works for a company that does
>custom software on a customer by customer basis.

No, big consulting company. Most of what they do is slamming in apps,
like SAP and Siebel, but sometimes the client insists on developing
in-house. They give more or less help as the client wants and can pay
for.

 I used to do that,
>working for small companies. It's a royal pain in the ass, and I'm
>glad I don't do it anymore. The large software companies make
>pre-packaged apllications, and sell custom "suites" made up of
>whatever of the pre-packaged products they have available that they've
>been able to sell to the company. Usually under an Enterprise
>Management shell of some sort. Each of the point products in the suite
>would consist of at least two teams, one for client side and one for
>server side, and therefore two different projects. Possible more, if
>the work load could be broken down into more than two cohesive
>individual sections.

When this company does a major Siebel installation for example, it's
not unusual to have six or more teams working concurrently. It depends
on the geographic spread (international is a bitch), how much database
work needs doing, how much DTS, how many screens they want, which app
modules, etc. Not unusual to take 50+ people two years, with new
skills coming and going as needed.

>>I don't know, but just for asking, how many textures were required in,
>>say, GTA:Vice City, versus Wasteland?
>
>I don't know either. I experimented with modding Vice City, though,
>and as I recall it has a couple hundred detailed textures - cars,
>people, etc - and a couple hundred more simple textures.

I don't know how to define textures, but when I play I see thousands
of storefront and residence graphics alone. Are those textures? 

>>It's not any more. With console titles it's a bigger industry than the
>>domestic movie biz. You can't totally ignore cross-over work and
>>revenues.
>
>I said PC. I didn't say console.

I know, but business-wise you can't ignore the crossover. It's one
good reason I don't think PC games are going anywhere. Much of the
work can be done for one or the other, and successful titles can
cross-over and earn out far more than they could in either alone. The
GTA series is  great example. Having consoles there lowers the
development risk for PC games tremendously. It doesn't help on
strategy games as much, but it helps the publishers on the total
portfolio, which washes into strategy games on a financial basis.

 The console industry has ALWAYS been
>huge.

I remember when it didn't exist, but PC games did.

 It's also always been a completely different market than the PC
>game industry.

I'm not sure how you're using "market" here, but the two are moving
closer on a variety of marketing element fronts: distribution,
pricing, promotional vehicles, user demographics, even genres.

 42 million people bought super mario brothers games for
>the Nintendo in the 1980s. I wasn't one of them. I was one of the
>100,000 or so fans of PC games. The fundamentals of the PC game
>industry and the console game industry have not changed in the last 20
>years. Some people have just thought that they have. And they've paid
>for that mistake dearly.

Well, I continue to disagree. The PC segment has changed, yes, but in
many ways it's healthier than it was in 1990. Console games have
helped make electronic entertainment an acceptable middle-class time
waster. We both remember how strange were the looks we got at parties
when we told "regular" 1990 people that we played computer games. It's
a mainstream activity now, and mostly due to consoles.

Steve


-- 
www.thepaxamsolution.com


