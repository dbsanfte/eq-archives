From -4359908605726827349
X-Google-Thread: fb739,84ef36cfd1becb59
X-Google-Attributes: gidfb739,public
X-Google-Language: ENGLISH,ASCII-7-bit
Path: g2news1.google.com!news3.google.com!news.glorb.com!newshub.sdsu.edu!elnk-nf2-pas!newsfeed.earthlink.net!stamper.news.pas.earthlink.net!newsread1.news.pas.earthlink.net.POSTED!00d81f24!not-for-mail
Newsgroups: alt.games.everquest
From: Tim Smith <reply_in_group@mouse-potato.com>
Subject: Re: If you found an exploit, what would you do?
References: <ovfFd.21779$06.5761@clgrps12>
Organization: Institute of Lawsonomy, Department of Suction and Pressure
User-Agent: slrn/0.9.7.4 (OS/2 for ENIAC)
Lines: 30
Message-ID: <uJgFd.5221$pZ4.4226@newsread1.news.pas.earthlink.net>
Date: Wed, 12 Jan 2005 21:34:18 GMT
NNTP-Posting-Host: 69.34.217.150
X-Complaints-To: abuse@earthlink.net
X-Trace: newsread1.news.pas.earthlink.net 1105565658 69.34.217.150 (Wed, 12 Jan 2005 13:34:18 PST)
NNTP-Posting-Date: Wed, 12 Jan 2005 13:34:18 PST
Xref: g2news1.google.com alt.games.everquest:29415

In article <ovfFd.21779$06.5761@clgrps12>, James Grahame wrote:
> Simple question, really. If you found an exploit in EQ (or, for the EQ2
> players, EQ2), what would you do?

Treat it like an exploitable security hole in any other software.  There are
a couple of different approaches that are common for that.

One is to notify the vendor (SOE in this case), and if they reasonably
acknowledge the problem, and appear to be taking reasonable steps to fix
it, wait.  If they deny or ignore the problem, publish the details.  This
approach is fairly common.  (You publish because the bad guys usually find
this stuff out anyway, so keeping it secret just makes it harder for the
people who aren't bad guys to know what the bad guys are up to).

Another is similar, but you publish the details after giving them a head
start, without waiting to see if they are actually addressing the problem or
not.  You might consider delaying if they argue that the fix is very
difficult or time consuming.  This approach is also fairly common.

Another approach (favored by noted computer security expert Dan Bernstein)
is to immediately publish the details of the problem.  His reasoning is that
almost all security problems could have been prevented with proper care and
design and testing, but because people are "nice" to the vendors (e.g., the
first two approaches), there isn't really incentive to produce secure code
in the first place.  It is cheaper to produce insecure code, and only fix
things that people find.  Giving the vendor any warning before publishing
just encourages them to continue with their poor practices.

-- 
--Tim Smith


