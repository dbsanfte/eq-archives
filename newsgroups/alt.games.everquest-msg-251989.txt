From 1528470458627246627
X-Google-Language: ENGLISH,ASCII-7-bit
X-Google-Thread: fb739,4f2f3d5a3a8522d
X-Google-Attributes: gidfb739,public
Path: g2news1.google.com!news1.google.com!news.glorb.com!border1.nntp.dca.giganews.com!nntp.giganews.com!priapus.visi.com!orange.octanews.net!news.octanews.net!phobos.visi.com!news-out.visi.com!news-3.mpls.visi.com.POSTED!not-for-mail
Message-ID: <40d84438$0$30597$a1866201@newsreader.visi.com>
From: nospam@nowhere.com
Subject: Re: Demise as a business model?
Newsgroups: alt.games.everquest
References: <idi4d0p65jasi7s70bedvtphum26rdq8n2@4ax.com> <40d34642$0$32617$a1866201@newsreader.visi.com> <30m6d0hk8m1jkdntlt5cag94s3h240mm34@4ax.com> <40d45662$0$32608$a1866201@newsreader.visi.com> <cvuad0l8isolnc7hunpitidsk5ntsjekcd@4ax.com> <40d59918$0$30603$a1866201@newsreader.visi.com> <da3fd01qek91ombafjghrvi5aop66aar0n@4ax.com> <Xns950FC3DD87B0Bxyz@207.225.159.6> <16tfd0doai3b2kb08dopmms19tuc3amj65@4ax.com> <zbUBc.815826$Pk3.30902@pd7tw1no> <b8bgd0pd9s2g4atona1u742lnt1jg8s6oq@4ax.com>
Distribution: world
User-Agent: tin/1.5.5-20000605 ("1959") (UNIX) (SunOS/5.8 (sun4u))
Date: 22 Jun 2004 14:37:44 GMT
Lines: 64
Organization: VISI.com
NNTP-Posting-Date: 22 Jun 2004 09:37:44 CDT
NNTP-Posting-Host: cb9a8d96.newsreader.visi.com
X-Trace: DXC=g94jGJO7IH1d;Sn>61PFM0m9<Q\>0:^S0hD3OXm`l_b81g]?5@4IiB>Odc:M[DI2d>Pj=5KmR<aH8
X-Complaints-To: abuse@visi.com
Xref: g2news1.google.com alt.games.everquest:7259

D.J. <jolly73@boingcableone.net> wrote:
> Hmmm. I never looked at the code, not part of our job, but the Cray
> that had 8 CPUs where I used to work would accept Cray Fortran
> programs that could use anywhere from one thru 8 cpus. The only
> thing I know for certain about that particular situation is that
> most of the programs that used all 8 of the Cpus at the same time
> had exclusive use of the computer for a certain period of time and
> they used huge datasets.

Fortran is a computer language that is math-friendly and lends itself
well to the compiler parallelizing the code.  It's no surprise that
those Fortran programs could leverage several CPUs.

> ] No amount of money is going to let you turn x86 emulation into a 
> ] massively parallel application.
> 
> Has it been tried ? I don't know.

The market speaks for itself: It would have been insanely cheaper for
Intel to just keep throwing in more CPU cores in order to keep boosting
x86 speed, but they didn't do that, because the problem doesn't lend
itself to parallelization.

> While I understand your simile... One person, unless they are very
> good at using remote control devices, cannot drive 8 cars at the
> same time by themselves. However, computer programs can be written
> to use however many CPUs there are in a computer. I know that
> computer programs were written, to use all 8 cpus at the same time.

When you're doing something parallizable, like modeling ocean
currents, or hurricanes, or other weather patterns, or one of many
other tasks, you can easily leverage multiple CPUs.  Very easily.  And
Fortran makes that easy, and Fortran compilers are very good at it.

Emulating x86/PC hardware is not one of those things.

> ] Same with the Cray. An EQ emulator is one lousy simple task. It will go 
> ] as fast as one processor can take it... it cannot be split up among 
> ] multiple cpus to go faster, just as driving cannot be accelerated by 
> ] owning multiple cars.
> 
> Hmmm. If each player character and /or a mob had its own CPU to
> control its movement... Well, I don't know if Fortran, although its
> possible other compilers could be installed on a Cray, could do
> that, control a character per cpu. But maybe it is possible.

Now you're talking about the EverQuest servers, which already are load
balanced.  The EverQuest servers *could* be run on Cray
supercomputers, but it wouldn't be economical: It's much cheaper to
network a bunch of inexpensive computers.

> ] > Its nospam that has the fetish about 'flops per cpu', not me.
> ] 
> ] Because its important. You should be concerned about 'per cpu' too.
> 
> And maybe it isn't as important as you think. I don't know, but I'm
> willing to think about it, and not be lockstepped into one version
> of it.

It can be a non-trivial subject, knowing what kinds of applications
can and can't leverage large numbers of CPUs.  But, there's a good
reason companies like Intel just didn't keep building in more
processor cores into their CPUs: It wouldn't have helped most
applications perform better.


