From -7180096804591692279
X-Google-Language: ENGLISH,ASCII-7-bit
X-Google-Thread: fb739,ffdc2a47b197e870,start
X-Google-Attributes: gidfb739,public
Path: controlnews3.google.com!news1.google.com!newshub.sdsu.edu!newshosting.com!nx02.iad01.newshosting.com!newsfeed.icl.net!newsfeed.fjserv.net!kibo.news.demon.net!news.demon.co.uk!demon!chiisai.demon.co.uk!Nospam
From: NoSpam <Nospam@chiisai.demon.co.uk>
Newsgroups: alt.games.everquest
Subject: SOE Developer Hopefully Found Collision Bug
Date: Mon, 31 May 2004 19:34:11 +0100
Organization: Everagain
Lines: 87
Message-ID: <7UIxI0Ajq3uAFw8+@chiisai.demon.co.uk>
NNTP-Posting-Host: chiisai.demon.co.uk
Mime-Version: 1.0
Content-Type: text/plain;charset=us-ascii;format=flowed
X-Trace: news.demon.co.uk 1086028464 12059 158.152.84.82 (31 May 2004 18:34:24 GMT)
X-Complaints-To: abuse@demon.net
NNTP-Posting-Date: Mon, 31 May 2004 18:34:24 +0000 (UTC)
User-Agent: Turnpike/6.02-U (<Ehvz5+4dx$uH8O7DiaOVcr4mUf>)
Xref: controlnews3.google.com alt.games.everquest:4298

Hi All

This is off the SOE EQlive site:

http://eqforums.station.sony.com/eq/board/message?board.id=development&me
ssage.id=1171&no_redir=true

Basically it's a report from one of the developers on why DX9 caused all 
sunken NPC's and stuck characters.

Hehe! Talk about not knowing how your own programme worked :(

But at least they found it. I hope?

----------------- Insert from Grumbuk-Dev ------------------

The walled/cornered NPC bug was the direct result of the client and 
server having two different values for the radius that is used for the 
collision sphere. This collision sphere is what is used as the basis for 
where an NPC and player can move. One of the things that changed with 
the DX9 engine was the introduction of data structures specifically 
designed to track collision states. The old engine didn't have this. 
These data structures will (and have) allowed us to make optimizations 
that the old engine simply couldn't support because it didn't have any 
concept of persistent collision data; everything was based on the scale 
of the model and that's it. Anyways, in these data structures the new 
engine had the collision size set at one point, then the model was 
scaled, and the bug is that the collision sphere was not also scaled on 
the server because the server doesn't actually load the model data so it 
has nothing to scale.. This caused NPCs to have a collision radius of 
1.2 on the server for instance where cazic thule in potime on the client 
was using 4.7 or so. The server would think the NPC is properly cornered 
but the clients would all think it was on the opposite side of the wall 
causing a bunch of bugs you all know about by now. Once the collision 
sizes were synchronized these problems went away. This was also part of 
the problem with pathing for very small NPCs (the spiders in podisease 
for instance) because they were constantly getting stuck in the ground 
due to having a collision sphere on the server *larger* than what the 
client was using.

On a related note, in the old engine NPCs were actually prevented from 
going through walls by something unrelated to collision checks of 
spheres and triangles. It was just doing a point check in legal space, 
which caused NPCs to be pushable exactly halfway in the wall which made 
the target point for archery subject to numerical precision errors. And 
the old collision code had numerous precision errors (one of the many 
things we just couldn't bring ourselve to port to DX9). In the new 
engine, it does a proper collision check of the sphere for the NPC 
against the zone geometry and being halfway in the wall shouldn't occur 
any more from a mathematical standpoint and this should permanently 
solve a lot of not-fun archery and other line of sight problems. 
Animation wise, NPCs will continue to have parts of their body 
penetrating whatever is nearby, but the collision sphere which is used 
for all visibility checks and whatnot is definitely kept outside the 
wall.

Changing the system from something with many inaccuracies that worked 
only due to CPU intensive redundant safety checks (ie point check in 
legal space) to something mathematically accurate that doesn't need 
additional methods to validate behavior is one of the reasons why the 
new system is better than the old one. It has also made the behavior 
much more strict which is a large part of why there have been so many 
"getting stuck" bugs. The system depends on everything always being in a 
legal state. This isn't always possible however, and I've had to find 
and correct each possible condition that could put a player "legally" in 
the position of overlapping geometry. Such as when a door closes on a 
player; this now has special code to allow the door to be partially 
disregarded when this happens.. Anyways, it's all very complicated, much 
more complicated than I think anyone here expected it to become, but I 
do feel we are nearly done. The remaining bugs - while frustrating to 
the players for sure - are at least approachable with known solutions 
(unlike the hard to reproduce stuff we've been dealing with lately) and 
it's just a matter of getting to them as fast as possible. Once those 
are taken care of the system will be ready for some very interesting new 
features that only a properly engineered collision system can support. 
How exactly we plan to extend it is not something I want to get into 
yet, right now we need to stay focused on making what we have now work 
correctly. We're pretty close, I think.

At any rate, we'll be patching the live servers as soon as we are 
confident these fixes are in fact fixes so for a few more days you can 
expect the behavior on live servers to remain the same.

--------------------------- End Insert 
----------------------------------
-- 
Denzil J. Brown


