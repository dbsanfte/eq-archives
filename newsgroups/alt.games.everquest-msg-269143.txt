From 7375340565860782845
X-Google-Thread: fb739,7b009fdc9e030a95
X-Google-Attributes: gidfb739,public
X-Google-Language: ENGLISH,ASCII-7-bit
Path: g2news1.google.com!news3.google.com!news.glorb.com!news3.optonline.net!pd7cy1no!shaw.ca!pd7tw3no.POSTED!53ab2750!not-for-mail
X-Trace-PostClient-IP: 70.65.78.236
From: Ben Sisson <ilkhanikeDIESPAM@yahoo.ca>
Newsgroups: alt.games.everquest
Subject: Re: EQ1: The Tic and Weapon Delay
Message-ID: <3a4vq0pkohf7f2oc37m5eiotfkvf5isajk@4ax.com>
References: <MPG.1c180c3b180a223b9898ee@shawnews> <207tq0du8d09r1j352pfkfpbbchlq0eqio@4ax.com> <MPG.1c18a374f8c15c4c9898f3@shawnews>
X-Newsreader: Forte Agent 1.8/32.553
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Transfer-Encoding: 7bit
Lines: 101
Date: Thu, 02 Dec 2004 22:22:28 GMT
NNTP-Posting-Host: 24.66.94.143
X-Complaints-To: abuse@shaw.ca
X-Trace: pd7tw3no 1102026148 24.66.94.143 (Thu, 02 Dec 2004 15:22:28 MST)
NNTP-Posting-Date: Thu, 02 Dec 2004 15:22:28 MST
Organization: Shaw Residential Internet
Xref: g2news1.google.com alt.games.everquest:25713

A thousand monkeys banging on keyboards posted the following under the
name 42 <nospam@nospam.com>:

>In article <207tq0du8d09r1j352pfkfpbbchlq0eqio@4ax.com>, 
>ilkhanikeDIESPAM@yahoo.ca says...
>> A thousand monkeys banging on keyboards posted the following under the
>> name 42 <nospam@nospam.com>:
>> 
>> >I'd always assumed there was a sub-tic accumulator to carry over the 
>> >remainder to eliminate this tic artifact, and ensure that even small 
>> >delay differences between weapons could be observed.
>> 
>> The tick is a client side artifact.
>
>Their is no doubt that their will be -some- fixed temporal granularity 
>that the game engine is updated on... (Weapon delay data seems to 
>suggest 1/10th.)

Yes, but not a 6 second tick. I'm just referring to that.


>> its in there to reduce pressure on the client CPU. Though you still
>> run into some people who still think sitting to med just before the
>> tick then standing up then sitting before the next tick works.
>
>I must admit, that while I don't personally engage in this level of 
>minmaxxing, I did test it at one point, and I was satisfied that it 
>worked.

It doesn't, whatever those posts below me think. You can see what is
really happening by doing it over a fairly significant period of
time/mana. People used to do tests of this. Try this out and tell me
what happens: get rid of most your mana (and take off your mana regen
gear, it makes this test harder). Then for a while do your
sit-at-tick-stand trick, trying to minimize as much time sitting as
you can. Then start trying to cast a spell with big mana requirement,
starting when you don't have enough but are getting close. For a
while, it will just instantly give you the no-mana message. This is
when the client knows you don't have enough mana. Then there can be
(depending on how much mana you're regenning) a time when you try, the
gems grey out as if you're starting a cast, but then it stops and
again gives the no-mana message. This is the client saying yes, you
have the mana, but the server responding no, you don't. I believe
doing that at that point resyncs the manabar so you'll get instant
notices of no-mana again. Soon after you will have enough mana to cast
and all will be well. People who did this test in the past noticed
that when they did the sit-stand thing and didn't resync (ie, they
waited until they did have the mana to cast the spell before trying),
the spell "seemed" to take more mana than usual (this was before the
numbers were available). You can google the group for those, its come
up many times before.

Notice you can't tell this using cannibalize because you will resync
the instant you cast the spell. The only way to observe this in action
is to force yourself out of sync by not casting while you're sitting
and standing. I don't care if others don't believe me or not on this,
we tested this out before most of them started playing the game. They
can believe whatever they want.

>
>I have also experienced the mob aggro effect, where sometimes if moving 
>fast I can run right through a mob and not aggro it... suggesting that 
>aggro checks are not performed every 1/10 second cycle, but are also 
>performed only periodically.

Well now that one is complicated because movement is controlled
clientside and the position update period changes according to what
you're doing. It's definately *not* on the tick (6 seconds). The
longest I've seen it go is something like 15 seconds (not exact)
sitting in an empty Nexus doing nothing. You see the packetloss bar
creep up as if you're lagging, but all it is is no packets being sent
or received at all. Normal movement it seemed to be every second or
so, perhaps a bit less. During combat and other events like that, its
probably updating position fairly fast (well under a second), since
you see other people reacting almost as fast as they really are. An
interesting biproduct of clientside movement is that the *higher* your
ping, the better chance you have of performing that little trick you
mentioned. Make it high enough and you could conceivably get past a
mob's aggro radius before the server receives your movement packets.
Since the server bows to the client in this case (one of the very few
places this is true in EQ), you get past scott free since I'm pretty
sure the server doesn't check to see what happened in the meantime (it
does try to predict where you are in the future, however, so this will
only work at the start of the movement chain). This is the same basis
as some of the movement cheats in MEQ.


>At any rate. I agree that the 'swings per tic' theory this guy was 
>presesenting as fact is pretty far fetched, and agree that it is 
>unlikely to be true.

Its mindboggling someone would even suggest that. It's pretty obvious
its not how it works

 
-- 

"Why stop now, just when I'm hating it?" - Marvin

"It's certainly not a "memory leak." - 'shadows', my latest stalker
"No one said it wasn't a memory leak." - 'shadows' a few posts later


