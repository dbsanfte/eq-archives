/var {--NOTE--} {This seems to work ok. Untested is spew from Twists, but it should add a *T* to the damage modifier display. So you'd have like: |4.0|*T*|1.5| .. the twist applies to the mod it follows (4.0 in this example). Only a /showme report, but you can easily adapt it to /chatall or /chatgroup, etc. When first loaded you might "bs <somenameThat'sNotAround>" to init it. It WILL goof up if you get the prompt after you type in "bs <target>" and before the mud actually sends the bs (the prompt shuts it back off). Blame Med/lag. Simple to use, just do "bs <target>". Enjoy.} {delete}

/action {<%3hp %2m %7mv %9br>} {MakeBSTimer;/updatebari BSTimer2;/enableevent BSTimer;/if {@Var(OmaBS_COUNT)>0} {/if {@Var(OmaBS_COUNT)==1} {/var OmaBS_HITS {@ForeBlue()Singled@ForeCyan()}} {/if {@Var(OmaBS_COUNT)==2} {/var OmaBS_HITS {@ForeGreen()Doubled@ForeCyan()}} {/var OmaBS_HITS {@ForeYellow()TRIPLED@ForeCyan()}}};/showme {@AnsiBold()@ForeCyan()I @Var(OmaBS_HITS) @Var(OmaBS_MOD) @AnsiBold()@ForeCyan()on @AnsiReset()@ForeCyan()@Var(OmaBS_NAME)@AnsiBold()@ForeCyan(), who has @Var(OmaBS_DAM)@ForeCyan() life left.}};/disablegroup OmaBSaction} {OmaBSaction}


/alias {bs %0} {/enablegroup OmaBSaction;/empty OmaBS_HITS;/var OmaBS_MOD {@AnsiReset()|};/empty OmaBS_DAM;/empty OmaBS_NAME;/var OmaBS_COUNT 0;backstab $0} {OmaBS}

/action {You twist %0 as you rem%9ve it from %1's back.} {/var OmaBS_MOD {@Var(OmaBS_MOD)@ForeMagenta()@Chr(224)@AnsiReset()|}} {OmaBSaction}


/var {--NOTE--} {bs hit spew} {delete}

/action {Before %1 can react, %1 tears th%9ough %0's defenses and plunges into %4 back.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeYellow()4.5@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {%1 finds a chink in %0's defen%9es and slides in for a direct hit!} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeYellow()5.0@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {%0 makes a strange sound but is s%9ddenly very silent, as you place %1 in %2 back.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeRed()ICED@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {Your grip on %1 slips, and its tip only finds %0's s%9oulder blades.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeBlue()2.0@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {%0 convulses in pain as you la%9d a powerful backstab.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeGreen()4.0@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {%1 finds its true mark as you stab at %0's ba%9k, as if it were guided by Vryce himself.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeMagenta()TRUE@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {%0 turns %1 head, not%9cing you.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeWhite()FOOTFALL@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {A flash of metal inter%9upts your concentration and your pierce lands slightly off-target as you stab at %0's back.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeGreen()3.0@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {With unbelevable luck, %0 moves away just as you sl%9sh at %1 back.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeWhite()WIFF@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {You attempt to stab %0 in the back, but your thrust is pa%9tially deflected before penetrating %1 defenses.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeBlue()2.5@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {You plunge %1 into the ba%9k of %0.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeGreen()3.5@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}

/action {Your clumsy attempt at a backstab ba%9ely hurts %0 at all.} {/var OmaBS_NAME {$0};/var OmaBS_MOD {@Var(OmaBS_MOD)@AnsiBold()@ForeBlue()1.5@AnsiReset()|};/var OmaBS_COUNT @Math(@Var(OmaBS_COUNT)+1)} {OmaBSaction}



/var {--NOTE--} {injury spew} {delete}

/action {%0is in ex%9ellent condition.} {/var OmaBS_DAM {@ForeBlue()100%}} {OmaBSaction}
/action {%0a few scr%9tches.} {/var OmaBS_DAM {@ForeBlue()90-99%}} {OmaBSaction}
/action {%0a nasty looking w%9lt on the forehead.} {/var OmaBS_DAM {@ForeBlue()83-89%}} {OmaBSaction}
/action {%0some small woun%9s and bruises.} {/var OmaBS_DAM {@ForeBlue()76-82%}} {OmaBSaction}
/action {%0minor wou%9ds.} {/var OmaBS_DAM {@ForeBlue()69-75%}} {OmaBSaction}
/action {%0winces in pa%9n.} {/var OmaBS_DAM {@ForeGreen()62-68%}} {OmaBSaction}
/action {%0quite a f%9w wounds.} {/var OmaBS_DAM {@ForeGreen()55-61%}} {OmaBSaction}
/action {%0grimaces with pa%9n.} {/var OmaBS_DAM {@ForeGreen()48-54%}} {OmaBSaction}
/action {%0nasty wounds and bleeding cu%9s.} {/var OmaBS_DAM {@ForeGreen()41-47%}}{OmaBSaction}
/action {%0some large, gaping woun%9s.} {/var OmaBS_DAM {@ForeYellow()36-40%}} {OmaBSaction}
/action {%0looks pretty awf%9l.} {/var OmaBS_DAM {@ForeYellow()29-35%}} {OmaBSaction}
/action {%0many grievous woun%9s.} {/var OmaBS_DAM {@ForeYellow()22-28%}} {OmaBSaction}
/action {%0screams in ago%9y.} {/var OmaBS_DAM {@ForeYellow()22-28%}} {OmaBSaction}
/action {%0covered with blood from oozing woun%9s.} {/var OmaBS_DAM {@ForeYellow()15-21%}} {OmaBSaction}
/action {%0vomiting blo%9d.} {/var OmaBS_DAM {@ForeYellow()15-21%}} {OmaBSaction}
/action {%0pales visibly as death nea%9s.} {/var OmaBS_DAM {@ForeRed()8-14%}} {OmaBSaction}
/action {%0barely clings to li%9e.} {/var OmaBS_DAM {@ForeRed()1-7%}} {OmaBSaction}

/action {%0is DEAD!%9} {/if {$9=="@Chr(33)"} {/var OmaBS_DAM {@ForeRed()0%}}} {OmaBSaction}

/var {OmaBS_HITS} {Singled|Doubled|Tripled} {OmaBS}
/var {OmaBS_MOD} {Type of hit(s), mod value} {OmaBS}
/var {OmaBS_DAM} {Mob's condition, percent of life left} {OmaBS}
/var {OmaBS_NAME} {Mob's name} {OmaBS}
/var {OmaBS_COUNT} {counter for single/dbl/triple attacks} {OmaBS}



/var {--NOTE--} {Baritem routines below to show bs lagmeter, remove or edit as needed to fit your bari needs} {delete}

/bari {BSTimer1} {BS Lagmeter [} {1} {13} {11} {0} {OmaBS}
/bari {BSTimer2} {$BSTimer} {14} {14} {12} {0} {OmaBS}
/bari {BSTimer3} {]} {28} {1} {11} {0} {OmaBS}
/alias {MakeBSTimer} {/empty BSTimer;/loop {1,14} {/var {BSTimer} {$BSTimer@Chr(249)}}} {OmaBS}
/event {BSTimer} {1} {/if {@Len($BSTimer)>1} {/var temp @Math(@Len($BSTimer)-1);/empty BSTimer;/loop {1,$temp} {/var BSTimer {$BSTimer@Chr(249)}};/updatebari BSTimer2} {/empty BSTimer;/updatebari BSTimer2;/disableevent BSTimer}}

/empty {BSTimer} {OmaBS}
/disableevent BSTimer




/disablegroup OmaBSaction
/killgroup delete


