{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":0,"authorName":"Ryan Honeyman","from":"Ryan Honeyman &lt;honeyman@...&gt;","replyTo":"LIST","senderId":"7Z1OGJa6u4mdSRWqYcJWryQlkG9D1b7fAQVGtTPtjHO9Mmzl_p1zzyDN8GZRiw1U-3DoEfPwRN1V63CQvPw7fGxC4nclNwOFawCUhg","spamInfo":{"isSpam":false,"reason":"0"},"subject":"[eqbards] Song DB Model (cont)","postDate":"953671583","msgId":16569,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PFBpbmUuR1NPLjMuOTUuMTAwMDMyMTE1Mzk0MS4yMzQwMUctMTAwMDAwQGRhbGk+"},"prevInTopic":0,"nextInTopic":0,"prevInTime":16568,"nextInTime":16570,"topicId":16569,"numMessagesInTopic":1,"msgSnippet":"I m really busy at work with many other projects, I haven t forgot about the database design I proposed.  I finished the songs table, input is welcome.  I will","messageBody":"<div id=\"ygrps-yiv-1127886446\">I&#39;m really busy at work with many other projects, I haven&#39;t<br/>\n  forgot about the database design I proposed.  I finished <br/>\n  the songs table, input is welcome.  I will work on the<br/>\n  other tables as soon as I can.  I added a few things, changed<br/>\n  a few names of variables and tables to make it easier to type<br/>\n  and easier to understand.  Below the table are the bulletin<br/>\n  points that highlight the capabilities.  If a datatype doesn&#39;t<br/>\n  look correct or isn&#39;t long enough, let me know.  Could be a typo<br/>\n  in there too, when I create the table I&#39;ll weed out syntax errors.<br/>\n<br/>\nCREATE TABLE songs (<br/>\n song_id               NUMBER (3),                                                                                                              <br/>\n song_level            NUMBER (3),                                        <br/>\n song_name             VARCHAR2 (50),                                   <br/>\n song_effect           VARCHAR2 (100),   <br/>\n song_cost             NUMBER (6),                                <br/>\n song_mana             NUMBER (4)       DEFAULT 0,                                       <br/>\n song_duration         NUMBER (3)       DEFAULT 3,                        <br/>\n song_casting_time     NUMBER (3)       DEFAULT 3,  <br/>\n song_recovery_time    NUMBER (3)       DEFAULT 0,<br/>\n song_hold_time        NUMBER (3)       DEFAULT 12,                               <br/>\n song_req_instrument   CHAR (1)         DEFAULT &#39;N&#39;,                          <br/>\n song_skill_id         NUMBER (2),                                                                          <br/>\n song_target_id        NUMBER (2),                                       <br/>\n song_taunt_id         NUMBER (1),<br/>\n song_aoe_range        NUMBER (3),                                       <br/>\n song_formula          VARCHAR2 (50),                                   <br/>\n song_analysis_by      NUMBER (3),                                        <br/>\n song_updated_by       NUMBER (3),                                    <br/>\n <br/>\n CONSTRAINT songs_pk   PRIMARY KEY (song_id),<br/>\n CONSTRAINT songs_fk1  FOREIGN KEY (song_skill_id)<br/>\n                       REFERENCES  skill (skill_id),<br/>\n CONSTRAINT songs_fk2  FOREIGN KEY (song_target_id)<br/>\n                       REFERENCES  targets (target_id),<br/>\n CONSTRAINT songs_fk3  FOREIGN KEY (song_taunt_id)<br/>\n                       REFERENCES  taunts (taunt_id),<br/>\n CONSTRAINT songs_fk4  FOREIGN KEY (song_taunt_id)<br/>\n                       REFERENCES  taunts (taunt_id),<br/>\n CONSTRAINT songs_fk5  FOREIGN KEY (song_analysis_by)<br/>\n                       REFERENCES  players (player_id),<br/>\n CONSTRAINT songs_fk6  FOREIGN KEY (song_updated_by)<br/>\n                       REFERENCES  players (player_id),<br/>\n CONSTRAINT songs_ch1  CHECK (song_req_instrument IN (&#39;Y&#39;,&#39;N&#39;))<br/>\n)<br/>\n<br/>\n<br/>\no supports up to 999 songs<br/>\no supports song cost up to 999999 copper (999.999 plat)<br/>\no supports mana cost up to 9999 mana<br/>\no supports duration up to 999 ticks<br/>\no supports casting time up to 999 secs<br/>\no supports recovery time up to 999 secs<br/>\no supports hold time up to 999 secs<br/>\no supports up to 99 skills<br/>\no supports up to 99 target types <br/>\no supports up to 9 taunt levels<br/>\no supports up to 999&#39; song radius <br/>\no supports up to 999 contributors (us, the people who test)<br/>\n<br/>\n<br/>\n  Harmonic.</div>","specialLinks":[]}}
